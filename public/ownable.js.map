{"version":3,"file":"ownable.js","mappings":"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","sources":["webpack://rwa-studio/./node_modules/simple-iframe-rpc/lib/listener.js","webpack://rwa-studio/./node_modules/simple-iframe-rpc/lib/constants.js","webpack://rwa-studio/webpack/bootstrap","webpack://rwa-studio/webpack/runtime/make namespace object","webpack://rwa-studio/./src/ownable.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"./constants\");\nclass Listener {\n    constructor(methods) {\n        this.methods = methods;\n    }\n    send(event, resultOrPromise) {\n        Promise.resolve(resultOrPromise)\n            .then(result => this.sendResult(event, result))\n            .catch(error => this.sendError(event, error));\n    }\n    sendResult(event, result) {\n        const { channel, id } = event.data;\n        const source = event.source || this.fallbackSource;\n        const targetOrigin = event.origin && event.origin !== \"null\" ? event.origin : \"*\";\n        source.postMessage({ '@rpc': constants_1.RESPONSE_TYPE, channel, id, result }, targetOrigin);\n    }\n    sendError(event, error) {\n        if (error instanceof ErrorEvent)\n            error = this.convertErrorEvent(error);\n        const { channel, id } = event.data;\n        const source = event.source || this.fallbackSource;\n        const targetOrigin = event.origin && event.origin !== \"null\" ? event.origin : \"*\";\n        try {\n            source.postMessage({ '@rpc': constants_1.RESPONSE_TYPE, channel, id, error }, targetOrigin);\n        }\n        catch (e) {\n            console.error(error);\n            throw e;\n        }\n    }\n    convertErrorEvent(errorEvent) {\n        const error = new Error(errorEvent.message);\n        error.name = errorEvent.error && errorEvent.error.name;\n        error.stack = errorEvent.error && errorEvent.error.stack;\n        return error;\n    }\n    listen(window, targetOrigin) {\n        window.addEventListener(\"message\", (event) => {\n            if ((targetOrigin !== \"*\" && event.origin !== targetOrigin) ||\n                event.data['@rpc'] !== constants_1.CALL_TYPE)\n                return;\n            const { fn, args } = event.data;\n            if (!(fn in this.methods)) {\n                this.sendError(event, `RPC method '${fn}' is not defined`);\n                return;\n            }\n            try {\n                this.send(event, this.methods[fn](...args));\n            }\n            catch (error) {\n                this.sendError(event, error);\n            }\n        });\n    }\n}\nexports.default = Listener;\n//# sourceMappingURL=listener.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RESPONSE_TYPE = exports.CALL_TYPE = void 0;\nexports.CALL_TYPE = 'simple-iframe-rpc-call';\nexports.RESPONSE_TYPE = 'simple-iframe-rpc-response';\n//# sourceMappingURL=constants.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Ownable.ts - Entry point for the ownable.js build\n *\n * This file implements the communication protocol for ownables.\n * It's compiled to ownable.js and loaded in each Ownable iframe.\n */\n\nimport Listener from 'simple-iframe-rpc/listener';\n\n// Define types for the ownable protocol\ninterface OwnableAttribute {\n  key: string;\n  value: string;\n}\n\ninterface OwnableEvent {\n  type: string;\n  attributes: OwnableAttribute[];\n}\n\ninterface OwnableResponse {\n  attributes?: OwnableAttribute[];\n  events?: OwnableEvent[];\n  data?: unknown;\n}\n\ninterface OwnableInfo {\n  sender?: string;\n  info?: {\n    sender?: string;\n    [key: string]: unknown;\n  };\n  [key: string]: unknown;\n}\n\ninterface OwnableMessage {\n  [key: string]: unknown;\n}\n\ninterface OwnableState {\n  [key: string]: unknown;\n}\n\ninterface WorkerResponse {\n  get(key: string): string;\n  has(key: string): boolean;\n  err?: string;\n}\n\n// Global variables\nlet ownableId: string;\nlet worker: Worker;\n\n// Set up the listener for RPC calls\nconst listener = new Listener({\n  init,\n  instantiate,\n  execute,\n  externalEvent,\n  query,\n  queryRaw,\n  refresh,\n});\nlistener.listen(window, '*');\n\n// Handle messages from the iframe\nwindow.addEventListener('message', (e) => {\n  if (e.origin !== 'null' || '@rpc' in e.data) return;\n  window.parent.postMessage(e.data, '*');\n});\n\n// Helper function to convert attributes to a dictionary\nfunction attributesToDict(\n  attributes: OwnableAttribute[],\n): Record<string, string> {\n  return Object.fromEntries(attributes.map((a) => [a.key, a.value]));\n}\n\n// Initialize the ownable\nfunction init(\n  id: string,\n  javascript: string,\n  wasm: ArrayBuffer,\n): Promise<unknown> {\n  ownableId = id;\n\n  return new Promise((resolve, reject) => {\n    const blob = new Blob([javascript], { type: `application/javascript` });\n    const blobURL = URL.createObjectURL(blob);\n    worker = new Worker(blobURL, { type: 'module' });\n\n    worker.onmessage = (event) => {\n      resolve(event.data);\n    };\n    worker.onerror = (err) => reject(err);\n    worker.onmessageerror = (err) => reject(err);\n\n    const buffer = wasm.buffer || wasm;\n    worker.postMessage(buffer, [buffer]);\n  });\n}\n\n// Helper function for worker calls\nfunction workerCall(\n  type: string,\n  ownableId: string,\n  msg: OwnableMessage,\n  info: OwnableInfo,\n  state?: OwnableState,\n): Promise<{ response: OwnableResponse; state: OwnableState }> {\n  return new Promise((resolve, reject) => {\n    if (!worker) {\n      reject(`Unable to ${type}: not initialized`);\n      return;\n    }\n\n    worker.addEventListener(\n      'message',\n      (event) => {\n        const data = event.data as WorkerResponse;\n\n        if ('err' in data) {\n          reject(new Error(`Ownable ${type} failed`, { cause: data.err }));\n          return;\n        }\n\n        const result = data.get('result');\n        const response = JSON.parse(result) as OwnableResponse;\n        const nextState = data.has('mem')\n          ? (JSON.parse(data.get('mem')).state_dump as OwnableState)\n          : state;\n\n        resolve({ response, state: nextState || {} });\n      },\n      { once: true },\n    );\n    worker.postMessage({\n      type,\n      ownable_id: ownableId,\n      msg,\n      info,\n      mem: { state_dump: state },\n    });\n  });\n}\n\n// Instantiate the ownable\nasync function instantiate(\n  msg: OwnableMessage,\n  info: OwnableInfo,\n): Promise<{ attributes: Record<string, string>; state: OwnableState }> {\n  const { response, state } = await workerCall(\n    'instantiate',\n    ownableId,\n    msg,\n    info,\n  );\n\n  return { attributes: attributesToDict(response.attributes || []), state };\n}\n\n// Execute a message\nasync function execute(\n  msg: OwnableMessage,\n  info: OwnableInfo,\n  state: OwnableState,\n): Promise<unknown> {\n  const { response, state: newState } = await workerCall(\n    'execute',\n    ownableId,\n    msg,\n    info,\n    state,\n  );\n  return executeResponse(response, newState);\n}\n\n// Handle external events\nasync function externalEvent(\n  msg: OwnableMessage,\n  messageInfo: Record<string, unknown>,\n  state: OwnableState,\n): Promise<unknown> {\n  const info = {\n    info: messageInfo,\n  };\n\n  const { response, state: newState } = await workerCall(\n    'external_event',\n    ownableId,\n    msg,\n    info,\n    state,\n  );\n  return executeResponse(response, newState);\n}\n\n// Process execute response\nfunction executeResponse(\n  response: OwnableResponse,\n  state: OwnableState,\n): unknown {\n  return {\n    attributes: attributesToDict(response.attributes || []),\n    events: (response.events || []).map((event) => ({\n      type: event.type,\n      attributes: attributesToDict(event.attributes),\n    })),\n    data: response.data,\n    state,\n  };\n}\n\n// Raw query\nasync function queryRaw(\n  msg: OwnableMessage,\n  state: OwnableState,\n): Promise<string> {\n  return (await workerCall('query', ownableId, msg, {}, state))\n    .response as unknown as string;\n}\n\n// Query with JSON parsing\nasync function query(\n  msg: OwnableMessage,\n  state: OwnableState,\n): Promise<unknown> {\n  const resultB64 = await queryRaw(msg, state);\n  return JSON.parse(atob(resultB64));\n}\n\n// Refresh the widget\nasync function refresh(state: OwnableState): Promise<void> {\n  const widgetState = await query({ get_widget_state: {} }, state);\n\n  const iframe = document.getElementsByTagName('iframe')[0];\n  if (iframe && iframe.contentWindow) {\n    iframe.contentWindow.postMessage(\n      { ownable_id: ownableId, state: widgetState },\n      '*',\n    );\n  }\n}\n"],"names":["constants_1","exports","constructor","methods","this","send","event","resultOrPromise","Promise","resolve","then","result","sendResult","catch","error","sendError","channel","id","data","source","fallbackSource","targetOrigin","origin","postMessage","RESPONSE_TYPE","ErrorEvent","convertErrorEvent","e","console","errorEvent","Error","message","name","stack","listen","window","addEventListener","CALL_TYPE","fn","args","Object","defineProperty","value","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","r","Symbol","toStringTag","ownableId","worker","attributesToDict","attributes","fromEntries","map","a","key","workerCall","type","msg","info","state","reject","cause","err","get","response","JSON","parse","nextState","has","state_dump","once","ownable_id","mem","executeResponse","events","async","queryRaw","query","resultB64","atob","Listener","init","javascript","wasm","blob","Blob","blobURL","URL","createObjectURL","Worker","onmessage","onerror","onmessageerror","buffer","instantiate","execute","newState","externalEvent","messageInfo","refresh","widgetState","get_widget_state","iframe","document","getElementsByTagName","contentWindow","parent"],"sourceRoot":""}